{"version":3,"sources":["Homepage.js","index.js"],"names":["pdfjs","GlobalWorkerOptions","workerSrc","version","Homepage","props","state","handleUpload","bind","mergePDFs","event","a","fileBuffers","target","files","file","Uint8Array","arrayBuffer","push","this","setState","map","uintarray","Array","from","fileUrls","URL","createObjectURL","PDFDocument","create","mergedDoc","buffer","load","pdfDoc","copyPages","getPageCount","keys","forEach","pdfPage","addPage","save","pdfBytes","mergedPdfBuffer","mergedPdfFile","File","type","mergedPdfUrl","mergedUrl","preventDefault","id","dataTransfer","setData","Promise","resolve","reject","getData","cards","document","querySelectorAll","firstCards","filter","card","i","getBoundingClientRect","top","lastCards","firstCard","bounds","pageX","left","pageY","bottom","slice","splice","parseInt","lastCard","right","indexOf","className","src","htmlFor","name","accept","onChange","multiple","onClick","onDragOver","e","onDrop","url","draggable","onDragStart","pageNumber","React","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e526136e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Homepage.css\";\nimport { Document, Page, pdfjs } from 'react-pdf';\nimport { PDFDocument } from 'pdf-lib';\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nclass Homepage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n\n    this.handleUpload = this.handleUpload.bind(this);\n    this.mergePDFs = this.mergePDFs.bind(this);\n  }\n\n  async handleUpload(event) {\n    const fileBuffers = [];\n    for (const file of event.target.files) {\n      fileBuffers.push(new Uint8Array(await file.arrayBuffer()));\n    }\n\n    this.setState({\n      files: event.target.files,\n      fileBuffers: fileBuffers.map(uintarray => Array.from(uintarray)),\n      fileUrls: Array.from(event.target.files).map(file => URL.createObjectURL(file))\n    });\n  }\n\n  async mergePDFs() {\n    const mergedDoc = await PDFDocument.create();\n\n    for (const buffer of this.state.fileBuffers) {\n      const pdfDoc = await PDFDocument.load(new Uint8Array(buffer));\n      const pdfPages = await mergedDoc.copyPages(pdfDoc, [...Array(pdfDoc.getPageCount()).keys()]);\n\n      pdfPages.forEach(pdfPage => mergedDoc.addPage(pdfPage));\n    };\n\n    const pdfBytes = await mergedDoc.save();\n    const mergedPdfBuffer = new Uint8Array(pdfBytes).buffer;\n    const mergedPdfFile = new File([mergedPdfBuffer], \"merged.pdf\", { type: \"application/pdf\" })\n    const mergedPdfUrl = URL.createObjectURL(mergedPdfFile);\n\n    this.setState({\n      mergedUrl: mergedPdfUrl\n    });\n  }\n\n  onDragOver(event) {\n    event.preventDefault();\n  }\n\n  onDragStart(event, id) {\n    event.dataTransfer.setData(\"id\", id);\n  }\n\n  onDrop(event) {\n    new Promise((resolve, reject) => {\n      const id = event.dataTransfer.getData(\"id\");\n      const cards = Array.from(document.querySelectorAll(\"[id^='draggable']\"));\n      const firstCards = cards.filter((card, i) => card.getBoundingClientRect().top !== cards[i - 1]?.getBoundingClientRect().top);\n      const lastCards = cards.filter((card, i) => card.getBoundingClientRect().top !== cards[i + 1]?.getBoundingClientRect().top);\n\n      firstCards.forEach(firstCard => {\n        const bounds = firstCard.getBoundingClientRect();\n        if (event.pageX < (bounds.left + 20) && event.pageY < bounds.bottom && event.pageY > bounds.top) {\n          const fileUrls = this.state.fileUrls.slice(0);\n          fileUrls.splice(0, 0, fileUrls[id]);\n          fileUrls.splice(parseInt(id) + 1, 1);\n\n          const fileBuffers = this.state.fileBuffers.slice(0);\n          fileBuffers.splice(0, 0, fileBuffers[id]);\n          fileBuffers.splice(parseInt(id) + 1, 1);\n\n          this.setState({\n            fileUrls,\n            fileBuffers\n          });\n          resolve();\n        }\n      });\n\n      lastCards.forEach(lastCard => {\n        const bounds = lastCard.getBoundingClientRect();\n        if (event.pageX > (bounds.right) && event.pageY < bounds.bottom && event.pageY > bounds.top) {\n          const fileUrls = this.state.fileUrls.slice(0);\n          fileUrls.splice(cards.indexOf(lastCard) + 1, 0, fileUrls[id]);\n          fileUrls.splice(parseInt(id), 1);\n\n          const fileBuffers = this.state.fileBuffers.slice(0);\n          fileBuffers.splice(cards.indexOf(lastCard) + 1, 0, fileBuffers[id]);\n          fileBuffers.splice(parseInt(id), 1);\n\n          this.setState({\n            fileUrls,\n            fileBuffers\n          });\n\n          resolve();\n        }\n      });\n\n      cards.forEach((card, i) => {\n        const bounds = card.getBoundingClientRect();\n        if (event.pageX > bounds.right && (cards[i + 1] && event.pageX < cards[i + 1].getBoundingClientRect().right) &&\n          event.pageY < bounds.bottom && event.pageY > bounds.top) {\n          const fileUrls = this.state.fileUrls.slice(0);\n          fileUrls.splice(i + 1, 0, fileUrls[id]);\n\n          const fileBuffers = this.state.fileBuffers.slice(0);\n          fileBuffers.splice(i + 1, 0, fileBuffers[id]);\n\n          if (id > i) {\n            fileUrls.splice(parseInt(id) + 1, 1);\n            fileBuffers.splice(parseInt(id) + 1, 1);\n          }\n          else {\n            fileUrls.splice(id, 1);\n            fileBuffers.splice(id, 1);\n          }\n\n          this.setState({\n            fileUrls,\n            fileBuffers\n          });\n        }\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"pdfMerged\">\n          {this.state.mergedUrl && <embed src={this.state.mergedUrl} className=\"pdfEmbed\" />}\n        </div>\n        <div className=\"pdfViewer\">\n          <div className=\"buttons\">\n            <label htmlFor=\"pdf1\" className=\"upload\">Upload files to merge</label>\n            <input type=\"file\" name=\"pdf1\" id=\"pdf1\" accept=\"application/pdf\" onChange={this.handleUpload} multiple />\n            <button className=\"upload\" id=\"mergeButton\" onClick={this.mergePDFs}>Merge</button>\n          </div>\n          <div className=\"pdfPreview\" onDragOver={e => this.onDragOver(e)} onDrop={e => this.onDrop(e)}>\n            {this.state.fileUrls && this.state.fileUrls.map((url, i) => {\n              return (\n                <div key={i} id={`draggable${i}`} draggable onDragStart={e => this.onDragStart(e, i)}>\n                  <Document file={url}>\n                    <Page pageNumber={1} />\n                  </Document>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Homepage;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Homepage from './Homepage';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Homepage />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}